{"version":3,"file":"index.umd.min.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/startOfWeek/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/date-fns/esm/differenceInCalendarDays/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/getDaysInMonth/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/isSameDay/index.js","../node_modules/date-fns/esm/differenceInCalendarWeeks/index.js","../node_modules/date-fns/esm/differenceInDays/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInCalendarMonths/index.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/getMonth/index.js","../node_modules/date-fns/esm/getTime/index.js","../node_modules/date-fns/esm/getUnixTime/index.js","../node_modules/date-fns/esm/startOfWeekYear/index.js","../node_modules/date-fns/esm/getWeekYear/index.js","../node_modules/date-fns/esm/getWeek/index.js","../node_modules/date-fns/esm/getWeeksInMonth/index.js","../node_modules/date-fns/esm/lastDayOfMonth/index.js","../node_modules/date-fns/esm/isToday/index.js","../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../node_modules/date-fns/esm/parse/index.js","../src/classes/utils/matchModifier.ts","../src/classes/utils/listModifiers.ts","../src/classes/DateWithModifiers.ts","../src/classes/utils/getModifiersFromProps.ts","../src/components/Caption/Caption.tsx","../src/components/Caption/getCaptionProps.ts","../src/components/Day/Day.tsx","../src/components/Day/getDayProps.ts","../src/components/Head/getWeekdaysNames.ts","../src/components/Head/Head.tsx","../src/components/Week/Week.tsx","../src/components/Month/getOutsideStartDays.ts","../src/components/Month/getOutsideEndDays.ts","../node_modules/date-fns/esm/endOfWeek/index.js","../src/components/Month/getWeeks.ts","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/addWeeks/index.js","../src/components/Month/Month.tsx","../src/components/WeekNumber/WeekNumber.tsx","../src/components/Navigation/Navigation.tsx","../src/components/Navigation/getNavigation.ts","../src/components/Navigation/getNavigationProps.ts","../src/components/DayPicker/defaultProps.ts","../src/components/DayPicker/defaultClassNames.ts","../src/components/DayPicker/filterUndefinedProps.ts","../src/components/DayPicker/DayPicker.tsx","../src/components/DayPicker/getMonths.ts","../src/hooks/useInput.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = date.getTimezoneOffset();\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from '../toDate/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  var desiredMonth = date.getMonth() + amount;\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));\n  return date;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toDate from '../toDate/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import startOfWeek from '../startOfWeek/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions);\n  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport compareAsc from '../compareAsc/index.js';\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n */\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from '../toDate/index.js';\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import getTime from '../getTime/index.js';\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\n\nexport default function getUnixTime(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import getWeekYear from '../getWeekYear/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * var result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, dirtyOptions);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * var result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\n\nexport default function getWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import startOfWeek from '../startOfWeek/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * var result = getISOWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import differenceInCalendarWeeks from '../differenceInCalendarWeeks/index.js';\nimport lastDayOfMonth from '../lastDayOfMonth/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * var result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\n\nexport default function getWeeksInMonth(date, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import toDate from '../toDate/index.js';\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import isSameDay from '../isSameDay/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameDay(dirtyDate, Date.now());\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `backupDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `backupDate` which works as a context of parsing.\n *\n * `backupDate` must be passed for correct work of the function.\n * If you're not sure which `backupDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `backupDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `backupDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} backupDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyBackupDate, dirtyOptions) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyBackupDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).reverse();\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyBackupDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import { isSameDay, differenceInDays } from 'date-fns';\nimport { Modifier } from 'types';\n/**\n * Return true if `day1` is after `day2`.\n */\nfunction isDayAfter(day1: Date, day2: Date): boolean {\n  return differenceInDays(day1, day2) > 0;\n}\n\n/**\n * Return true if `day1` is before `day2`.\n */\nfunction isDayBefore(day1: Date, day2: Date): boolean {\n  return differenceInDays(day1, day2) < 0;\n}\n\n/**\n * Return `true` if a date matches the specified modifier.\n */\nexport function matchModifier(day: Date, modifier: Modifier): boolean {\n  if (!modifier) {\n    return false;\n  }\n  let modifiers: Array<Modifier>;\n\n  if (Array.isArray(modifier)) {\n    modifiers = modifier;\n  } else {\n    modifiers = [modifier];\n  }\n\n  return modifiers.some((modifier: Modifier) => {\n    if (!modifier) {\n      return false;\n    }\n    if (modifier instanceof Date) {\n      return isSameDay(day, modifier);\n    }\n    if (\n      'after' in modifier &&\n      'before' in modifier &&\n      differenceInDays(modifier.before, modifier.after) > 0\n    ) {\n      return (\n        isDayAfter(day, modifier.after) && isDayBefore(day, modifier.before)\n      );\n    }\n    if (\n      'after' in modifier &&\n      'before' in modifier &&\n      (isDayAfter(modifier.after, modifier.before) ||\n        isSameDay(modifier.after, modifier.before))\n    ) {\n      return (\n        isDayAfter(day, modifier.after) || isDayBefore(day, modifier.before)\n      );\n    }\n    if ('after' in modifier) {\n      return isDayAfter(day, modifier.after);\n    }\n    if ('before' in modifier) {\n      return isDayBefore(day, modifier.before);\n    }\n    if ('daysOfWeek' in modifier) {\n      return modifier.daysOfWeek.includes(day.getDay());\n    }\n    if (typeof modifier === 'function') {\n      return modifier(day);\n    }\n    return false;\n  });\n}\n","import { Modifiers, Modifier } from 'types';\nimport { matchModifier } from './matchModifier';\n\n/**\n * Return the list of modifiers name matching the given day for the given\n * modifiers.\n */\nexport function listModifiers(day: Date, modifiers: Modifiers): Array<string> {\n  function reduceModifiers(\n    previousValue: Array<string>,\n    [name, modifier]: [string, Modifier]\n  ): Array<string> {\n    if (matchModifier(day, modifier)) {\n      previousValue.push(name);\n    }\n    return previousValue;\n  }\n  return Object.entries(modifiers).reduce(reduceModifiers, []);\n}\n","import { isToday } from 'date-fns';\nimport { MatchingModifiers, ModifierValueType, DayPickerProps } from 'types';\n\nimport { getModifiersFromProps } from './utils/getModifiersFromProps';\nimport { listModifiers } from './utils/listModifiers';\n\nexport interface DateWithModifiers {\n  date: Date;\n  modifiers: MatchingModifiers;\n}\n\nconst defaultModifiers: MatchingModifiers = {\n  disabled: false,\n  hidden: false,\n  interactive: true,\n  outside: '',\n  selected: undefined,\n  today: false,\n};\n\nexport class DateWithModifiers {\n  constructor(date: Date, initialModifiers = {}, props: DayPickerProps) {\n    this.date = date;\n\n    const modifiers: MatchingModifiers = {\n      ...defaultModifiers,\n      today: isToday(date),\n      ...initialModifiers,\n    };\n\n    if (modifiers.outside && !props.showOutsideDays) {\n      modifiers.hidden = true;\n    }\n    modifiers.disabled = Boolean(\n      modifiers.outside && !props.enableOutsideDaysClick\n    );\n\n    const modifiersFromProps = getModifiersFromProps(props);\n    const modifiersArray = listModifiers(date, modifiersFromProps);\n    modifiersArray.forEach(modifier => (modifiers[modifier] = true));\n\n    if (!props.onDayClick || modifiers.hidden || modifiers.disabled) {\n      modifiers.interactive = false;\n    }\n\n    this.modifiers = modifiers;\n  }\n\n  date: Date;\n  modifiers: MatchingModifiers;\n\n  getModifier(name: string): ModifierValueType {\n    return this.modifiers[name];\n  }\n}\n","import { DayPickerProps, Modifiers } from 'types';\n\n/**\n * Return the `modifiers` prop including the modifiers from shortcut-props\n * (`selected`, `disabled` and `hidden`)\n */\nexport function getModifiersFromProps(props: DayPickerProps): Modifiers {\n  const modifiers = Object.assign({}, props.modifiers);\n  if (props.selected) {\n    modifiers.selected = props.selected;\n  }\n  if (props.disabled) {\n    modifiers.disabled = props.disabled;\n  }\n  if (props.hidden) {\n    modifiers.hidden = props.hidden;\n  }\n  return modifiers;\n}\n","import * as React from 'react';\nimport { DayPickerProps } from 'types';\nimport { getCaptionProps } from './getCaptionProps';\n\nexport interface CaptionProps {\n  month: Date;\n  dayPickerProps: DayPickerProps;\n}\n\nexport interface CaptionHtmlProps {\n  containerProps: {\n    className?: string;\n    style?: React.CSSProperties;\n  };\n}\n\nexport const Caption: React.FC<CaptionProps> = ({ month, dayPickerProps }) => {\n  const { containerProps } = getCaptionProps(dayPickerProps);\n  const { locale } = dayPickerProps;\n  return (\n    <caption {...containerProps}>\n      {dayPickerProps.formatCaption(month, { locale })}\n    </caption>\n  );\n};\n","import { DayPickerProps } from 'types';\nimport { CaptionHtmlProps } from './Caption';\n\n/**\n * Return props for the Caption component.\n */\nexport function getCaptionProps(props: DayPickerProps): CaptionHtmlProps {\n  const { styles, classNames } = props;\n  return {\n    containerProps: {\n      className: classNames.caption,\n      style: styles.caption,\n    },\n  };\n}\n","import * as React from 'react';\nimport { DayPickerProps, MatchingModifiers } from 'types';\nimport { getDayProps } from './getDayProps';\n\nexport interface DayProps {\n  day: Date;\n  modifiers: MatchingModifiers;\n  dayPickerProps: DayPickerProps;\n}\n\nexport interface DayHtmlProps {\n  containerProps: {\n    'aria-disabled'?: boolean;\n    disabled?: boolean;\n    onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n    className?: string;\n    style?: React.CSSProperties;\n  };\n  wrapperProps: {\n    className?: string;\n    style?: React.CSSProperties;\n  };\n}\n\nexport const Day: React.FC<DayProps> = props => {\n  const { day, modifiers, dayPickerProps } = props;\n  const { locale, formatDay } = dayPickerProps;\n\n  const { containerProps, wrapperProps } = getDayProps(\n    day,\n    modifiers,\n    dayPickerProps\n  );\n\n  if (modifiers && modifiers.hidden) {\n    return <span />;\n  }\n\n  const Component = modifiers.interactive ? 'button' : 'span';\n\n  return (\n    <Component {...containerProps}>\n      <span {...wrapperProps}>{formatDay(day, { locale })}</span>\n    </Component>\n  );\n};\n","import { MatchingModifiers, DayPickerProps, ModifierValueType } from 'types';\nimport { DayHtmlProps } from './Day';\n\n/**\n * Return the props for the Day component.\n */\nexport function getDayProps(\n  day: Date,\n  modifiers: MatchingModifiers,\n  props: DayPickerProps\n): DayHtmlProps {\n  const {\n    onDayClick,\n    styles,\n    modifiersStyles,\n    classNames,\n    modifiersClassNames,\n  } = props;\n\n  let onClick;\n  if (modifiers.interactive && onDayClick) {\n    onClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\n      e.stopPropagation();\n      e.preventDefault();\n      onDayClick(day, modifiers, e);\n    };\n  }\n\n  let style = { ...styles.day };\n  if (styles) {\n    // Apply the custom inline-styles\n    Object.keys(modifiers).forEach(modifier => {\n      style = {\n        ...style,\n        ...styles[modifier],\n      };\n    });\n  }\n  if (modifiersStyles) {\n    // Apply the styles for the modifier\n    Object.keys(modifiers).forEach(modifier => {\n      style = {\n        ...style,\n        ...modifiersStyles[modifier],\n      };\n    });\n  }\n\n  const className = [classNames.day] || [];\n  if (modifiersClassNames || classNames) {\n    Object.keys(modifiers)\n      .filter(modifier => !!modifiers[modifier])\n      .forEach(modifier => {\n        if (classNames[modifier]) {\n          className.push(classNames[modifier]);\n        }\n        if (modifiersClassNames && modifiersClassNames[modifier]) {\n          className.push(modifiersClassNames[modifier]);\n        }\n      });\n  }\n\n  const dataProps: { [key: string]: ModifierValueType } = {};\n  Object.entries(modifiers)\n    .filter(value => Boolean(value))\n    .forEach(([modifier, value]) => {\n      dataProps[`data-rdp-${modifier}`] = value;\n    });\n\n  const containerProps = {\n    'aria-disabled': !modifiers.interactive || undefined,\n    disabled: modifiers.disabled || undefined,\n    onClick,\n    style,\n    className: className.join(' '),\n    ...dataProps,\n  };\n  const wrapperProps = {\n    className: classNames.dayWrapper,\n    styles: styles.dayWrapper,\n  };\n\n  return { containerProps, wrapperProps };\n}\n","import { startOfWeek, addDays } from 'date-fns';\nimport { DayPickerProps } from 'types';\n\nconst date = new Date();\n\nexport function getWeekdaysNames(\n  locale: Locale,\n  format: DayPickerProps['formatCaption']\n): Array<string> {\n  const start = startOfWeek(date, { locale });\n  const names = [];\n  for (let i = 0; i < 7; i++) {\n    const day = addDays(start, i);\n    names.push(format(day, { locale }));\n  }\n  return names;\n}\n","import * as React from 'react';\nimport { DayPickerProps } from 'types';\nimport { getWeekdaysNames } from './getWeekdaysNames';\n\nexport interface HeadProps {\n  locale: Locale;\n  showWeekNumber: boolean;\n  dayPickerProps: DayPickerProps;\n}\n\nexport const Head: React.FC<HeadProps> = props => {\n  const { locale, showWeekNumber, dayPickerProps } = props;\n  const { classNames, styles, formatWeekdayName } = dayPickerProps;\n  const weekdayNames = getWeekdaysNames(locale, formatWeekdayName);\n  return (\n    <thead style={styles.head} className={classNames.head}>\n      <tr style={styles.headRow} className={classNames.headRow}>\n        {showWeekNumber && (\n          <th\n            style={styles.headWeekNumber}\n            className={classNames.headWeekNumber}\n          ></th>\n        )}\n        {weekdayNames.map((name, i) => (\n          <th\n            key={i}\n            scope=\"col\"\n            style={styles.headWeekName}\n            className={classNames.headWeekName}\n          >\n            {name}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n","import * as React from 'react';\nimport { getUnixTime } from 'date-fns';\nimport { DayPickerProps } from 'types';\nimport { DateWithModifiers } from 'classes';\n\nexport interface WeekProps {\n  weekNumber: number;\n  week: DateWithModifiers[];\n  dayPickerProps: DayPickerProps;\n}\n\nexport const Week: React.FC<WeekProps> = props => {\n  const { weekNumber, week, dayPickerProps } = props;\n  const { showWeekNumber, classNames, styles, components } = dayPickerProps;\n  const { Day, WeekNumber } = components;\n  return (\n    <tr className={classNames.week} style={styles.week}>\n      {showWeekNumber && (\n        <th className={classNames.weekWeeknumber} style={styles.weekWeeknumber}>\n          <WeekNumber\n            days={week.map(day => day.date)}\n            number={Number(weekNumber)}\n            dayPickerProps={dayPickerProps}\n          />\n        </th>\n      )}\n      {week.map(day => (\n        <td\n          className={classNames.weekDay}\n          style={styles.weekDay}\n          key={getUnixTime(day.date)}\n        >\n          <Day\n            day={day.date}\n            modifiers={day.modifiers}\n            dayPickerProps={dayPickerProps}\n          />\n        </td>\n      ))}\n    </tr>\n  );\n};\n","import { startOfWeek, differenceInDays, addDays } from 'date-fns';\nimport { DateWithModifiers } from 'classes';\nimport { DayPickerProps } from 'types';\n\nexport function getOutsideStartDays(\n  day: DateWithModifiers,\n  props: DayPickerProps\n): Array<DateWithModifiers> {\n  const { locale } = props;\n  const days = [];\n  const firstDayOfWeek = startOfWeek(day.date, { locale });\n  const startDiff = differenceInDays(day.date, firstDayOfWeek);\n\n  for (let i = 0; i < startDiff; i++) {\n    const day = addDays(firstDayOfWeek, i);\n    const hidden = props.fromMonth && day < props.fromMonth;\n    const modifiers = { outside: 'start', hidden };\n    const dateWithModifiers = new DateWithModifiers(day, modifiers, props);\n    days.push(dateWithModifiers);\n  }\n  return days;\n}\n","import { endOfWeek, differenceInDays, addDays } from 'date-fns';\nimport { DateWithModifiers } from 'classes';\nimport { DayPickerProps } from 'types';\n\nexport function getOutsideEndDays(\n  day: DateWithModifiers,\n  props: DayPickerProps\n): Array<DateWithModifiers> {\n  const { locale } = props;\n  const days = [];\n  const lastDayOfWeek = endOfWeek(day.date, { locale });\n  const endDiff = differenceInDays(lastDayOfWeek, day.date);\n  for (let i = 1; i <= endDiff; i++) {\n    const dayDate = addDays(day.date, i);\n    const hidden = props.toMonth && dayDate > props.toMonth;\n    const modifiers = { outside: 'end', hidden };\n    const dateWithModifiers = new DateWithModifiers(dayDate, modifiers, props);\n    days.push(dateWithModifiers);\n  }\n  return days;\n}\n","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import {\n  addDays,\n  addWeeks,\n  differenceInDays,\n  endOfMonth,\n  getMonth,\n  getWeek,\n  getWeeksInMonth,\n  startOfMonth,\n} from 'date-fns';\nimport { DateWithModifiers } from 'classes';\nimport { DayPickerProps } from 'types';\nimport { getOutsideStartDays } from './getOutsideStartDays';\nimport { getOutsideEndDays } from './getOutsideEndDays';\n\ntype MonthWeeks = { [key: string]: DateWithModifiers[] };\n\n/**\n * Return the weeks for the given month. Each key of the returned object is the\n * week number.\n */\nexport function getWeeks(month: Date, props: DayPickerProps): MonthWeeks {\n  const { locale, fixedWeeks } = props;\n  const monthStart = startOfMonth(month);\n  const monthEnd = endOfMonth(month);\n\n  const diff = differenceInDays(monthEnd, monthStart);\n\n  const weeks: MonthWeeks = {};\n  let lastWeekStr = '';\n  for (let i = 0; i <= diff; i++) {\n    const date = addDays(monthStart, i);\n    const dateWithModifiers = new DateWithModifiers(date, {}, props);\n    let week = getWeek(dateWithModifiers.date, { locale });\n    if (week === 1 && getMonth(date) === 11) {\n      week = 53;\n    }\n    const weekStr: string = week.toString();\n\n    if (!weeks[weekStr]) {\n      const startDays = getOutsideStartDays(dateWithModifiers, props);\n      // Create a new week by adding outside start days\n      weeks[weekStr] = startDays;\n    }\n    weeks[weekStr].push(dateWithModifiers);\n    lastWeekStr = weekStr;\n  }\n\n  let lastWeek = weeks[lastWeekStr];\n  const lastDay = lastWeek[lastWeek.length - 1];\n  const endDays = getOutsideEndDays(lastDay, props);\n  weeks[lastWeekStr] = lastWeek.concat(endDays);\n\n  // add extra weeks to the month, up to 6 weeks\n  if (fixedWeeks) {\n    lastWeek = weeks[lastWeekStr];\n    const lastWeekDate = lastWeek[lastWeek.length - 1].date;\n    const weeksInMonth = getWeeksInMonth(month, { locale });\n    if (weeksInMonth < 6) {\n      const diff = differenceInDays(\n        addWeeks(lastWeekDate, 6 - weeksInMonth),\n        lastWeekDate\n      );\n      for (let i = 0; i < diff; i++) {\n        const date = addDays(lastWeekDate, i + 1);\n        const dateWithModifiers = new DateWithModifiers(\n          date,\n          { outside: 'end' },\n          props\n        );\n        let week = getWeek(date, { locale });\n        if (week === 1 && getMonth(month) === 11) {\n          week = 53;\n        }\n        if (!weeks[week]) {\n          weeks[week] = [];\n        }\n        weeks[week.toString()].push(dateWithModifiers);\n      }\n    }\n  }\n\n  return weeks;\n}\n","import toDate from '../toDate/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import * as React from 'react';\nimport { DayPickerProps } from 'types';\nimport { Head } from 'components/Head';\nimport { Week } from 'components/Week';\nimport { getWeeks } from './getWeeks';\n\nexport interface MonthProps {\n  month: Date;\n  dayPickerProps: DayPickerProps;\n}\n\nexport const Month: React.FC<MonthProps> = props => {\n  const { month, dayPickerProps } = props;\n  const { locale, classNames, styles } = dayPickerProps;\n  const { showCaption, showHead } = dayPickerProps;\n  const {\n    components: { Caption },\n  } = dayPickerProps;\n\n  const weeks = getWeeks(month, dayPickerProps);\n\n  return (\n    <div className={classNames.month}>\n      <table className={classNames.monthTable} style={styles.monthTable}>\n        {showCaption && (\n          <Caption month={month} dayPickerProps={dayPickerProps} />\n        )}\n        {showHead && (\n          <Head\n            locale={locale}\n            showWeekNumber={dayPickerProps.showWeekNumber}\n            dayPickerProps={dayPickerProps}\n          />\n        )}\n        <tbody className={classNames.monthTbody} style={styles.monthTbody}>\n          {Object.keys(weeks).map(weekNumber => (\n            <Week\n              key={weekNumber}\n              week={weeks[weekNumber]}\n              weekNumber={Number(weekNumber)}\n              dayPickerProps={dayPickerProps}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { DayPickerProps } from 'types';\n\nexport interface WeekNumberProps {\n  number: number;\n  days: Array<Date>;\n  dayPickerProps: DayPickerProps;\n}\n\nexport const WeekNumber: React.FC<WeekNumberProps> = ({\n  number,\n  dayPickerProps,\n}) => {\n  const { formatWeekNumber, locale, classNames, styles } = dayPickerProps;\n  return (\n    <span className={classNames.weekNumber} style={styles.weekNumber}>\n      {formatWeekNumber(number, { locale })}\n    </span>\n  );\n};\n","import * as React from 'react';\nimport { DayPickerProps } from 'types';\nimport { getNavigation } from './getNavigation';\nimport { getNavigationProps } from './getNavigationProps';\n\nexport interface NavigationProps {\n  dayPickerProps: DayPickerProps;\n}\n\nexport interface NavigationHtmlProps {\n  containerProps: {\n    className?: string;\n    style?: React.CSSProperties;\n  };\n  nextProps: {\n    className?: string;\n    style?: React.CSSProperties;\n  };\n  prevProps: {\n    className?: string;\n    style?: React.CSSProperties;\n  };\n}\n\nexport type NavigationMonths = { nextMonth?: Date; prevMonth?: Date };\n\nexport const Navigation: React.FC<NavigationProps> = props => {\n  const { dayPickerProps } = props;\n  const { onMonthChange, onPrevClick, onNextClick } = dayPickerProps;\n\n  const { nextMonth, prevMonth } = getNavigation(dayPickerProps);\n\n  const { containerProps, nextProps, prevProps } = getNavigationProps(\n    dayPickerProps\n  );\n\n  const handlePrevClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    onMonthChange && prevMonth && onMonthChange(prevMonth, e);\n    onPrevClick && prevMonth && onPrevClick(prevMonth, e);\n  };\n  const handleNextClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    onMonthChange && nextMonth && onMonthChange(nextMonth, e);\n    onNextClick && nextMonth && onNextClick(nextMonth, e);\n  };\n  if (!dayPickerProps.onMonthChange) {\n    return null;\n  }\n\n  const { prevLabel, nextLabel } = dayPickerProps;\n\n  const prevButton = prevLabel && (\n    <button\n      {...prevProps}\n      key=\"prev\"\n      disabled={!prevMonth}\n      type=\"button\"\n      onClick={handlePrevClick}\n    >\n      {prevLabel}\n    </button>\n  );\n\n  const nextButton = nextLabel && (\n    <button\n      {...nextProps}\n      key={'next'}\n      disabled={!nextMonth}\n      type=\"button\"\n      onClick={handleNextClick}\n    >\n      {nextLabel}\n    </button>\n  );\n  let buttons = [prevButton, nextButton];\n  if (dayPickerProps.dir === 'rtl') {\n    buttons = buttons.reverse();\n  }\n  return <div {...containerProps}>{buttons}</div>;\n};\n","import { startOfMonth, addMonths } from 'date-fns';\nimport { DayPickerProps } from 'types';\nimport { NavigationMonths } from './Navigation';\n\n/**\n * Return the next and the previous months for the navigation component, according to the DayPicker props.\n */\nexport function getNavigation(props: DayPickerProps): NavigationMonths {\n  const { fromMonth, toMonth, month, numberOfMonths, pagedNavigation } = props;\n\n  const add = pagedNavigation ? numberOfMonths : 1;\n  const currentMonth = startOfMonth(month || new Date());\n\n  let prevMonth: Date | undefined;\n  if (!fromMonth || currentMonth > startOfMonth(fromMonth)) {\n    prevMonth = addMonths(currentMonth, add * -1);\n  }\n\n  let nextMonth: Date | undefined;\n  if (\n    !toMonth ||\n    addMonths(currentMonth, numberOfMonths) <= startOfMonth(toMonth)\n  ) {\n    nextMonth = addMonths(currentMonth, add);\n  }\n\n  return { nextMonth, prevMonth };\n}\n","import { DayPickerProps } from 'types';\nimport { NavigationHtmlProps } from './Navigation';\n\n/**\n * Return the props for the Navigation component and its children.\n */\nexport function getNavigationProps(props: DayPickerProps): NavigationHtmlProps {\n  const { classNames, styles } = props;\n\n  const containerProps = { className: classNames.nav, style: styles.nav };\n  const nextProps = {\n    className: classNames.navNext,\n    style: styles.navNext,\n  };\n  const prevProps = {\n    className: classNames.navPrev,\n    style: styles.navPrev,\n  };\n\n  return {\n    containerProps,\n    nextProps,\n    prevProps,\n  };\n}\n","import locale from 'date-fns/locale/en-US';\nimport { startOfMonth, format } from 'date-fns';\n\nimport { FormatOptions, DayPickerProps } from 'types';\nimport { Caption } from 'components/Caption/Caption';\nimport { Day } from 'components/Day/Day';\nimport { WeekNumber } from 'components/WeekNumber/WeekNumber';\nimport { Navigation } from 'components/Navigation/Navigation';\n\nimport { defaultClassNames } from './defaultClassNames';\n\nfunction formatDay(day: Date, formatOptions?: FormatOptions): string {\n  return format(day, 'd', formatOptions);\n}\n\nfunction formatCaption(month: Date, formatOptions?: FormatOptions): string {\n  return format(month, 'LLLL Y', formatOptions);\n}\n\nfunction formatWeekdayName(day: Date, formatOptions?: FormatOptions): string {\n  return format(day, 'E', formatOptions);\n}\n\nfunction formatWeekNumber(weekNumber: number): string {\n  return `${weekNumber}`;\n}\n\nexport const defaultProps: DayPickerProps = {\n  enableOutsideDaysClick: false,\n  classNames: defaultClassNames,\n  className: '',\n  style: {},\n  styles: {},\n  components: {\n    Caption,\n    Day,\n    Navigation,\n    WeekNumber,\n  },\n  fixedWeeks: false,\n  formatCaption,\n  formatDay,\n  formatWeekdayName,\n  formatWeekNumber,\n  locale,\n  nextLabel: '▶',\n  modifiersClassNames: {},\n  modifiersStyles: {},\n  month: startOfMonth(new Date()),\n  numberOfMonths: 1,\n  pagedNavigation: false,\n  prevLabel: '◀',\n  reverseMonths: false,\n  showCaption: true,\n  showHead: true,\n  showNavigation: true,\n  showOutsideDays: false,\n  showWeekNumber: false,\n};\n","import { ClassNames } from 'types';\n\nexport const defaultClassNames: ClassNames = {\n  container: 'rdp',\n  caption: 'rdp-caption',\n\n  // Day Component\n  day: 'rdp-day',\n  dayWrapper: 'rdp-day_wrapper',\n\n  // Month Component\n  month: 'rdp-month',\n  monthTable: 'rdp-month_table',\n  monthTbody: 'rdp-month_tbody',\n  months: 'rdp-months',\n\n  // Head Components\n  head: 'rdp-head',\n  headRow: 'rdp-head_row',\n  headWeekNumber: 'rdp-head_weeknumber',\n  headWeekName: 'rdp-head_weekname',\n\n  // Navigation Component\n  nav: 'rdp-nav',\n  navPrev: 'rdp-nav_prev',\n  navNext: 'rdp-nav_next',\n\n  // Week Component\n  week: 'rdp-week',\n  weekDay: 'rdp-week_day',\n  weekWeeknumber: 'rdp-week_weeknumber',\n\n  // WeekNumber component\n  weekNumber: 'rdp-weeknumber',\n\n  // Modifiers\n  selected: 'rdp-day_selected',\n  disabled: 'rdp-day_disabled',\n  today: 'rdp-day_today',\n  outside: 'rdp-day_outside',\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Filter the undefined props of `obj`.\n */\nexport function filterUndefinedProps(obj: {\n  [index: string]: any;\n}): { [index: string]: any } {\n  if (!obj) return {};\n  const clean: { [index: string]: any } = {};\n  Object.entries(obj).forEach(([key, value]) => {\n    if (typeof value === 'undefined') {\n      return;\n    }\n    clean[key.toString()] = value;\n  });\n  return clean;\n}\n","import * as React from 'react';\nimport { getTime, startOfMonth } from 'date-fns';\nimport { DayPickerProps, Components, ClassNames } from 'types';\nimport { Month } from 'components/Month';\n\nimport { getMonths } from './getMonths';\nimport { defaultProps } from './defaultProps';\nimport { filterUndefinedProps } from './filterUndefinedProps';\n\nconst DayPickerControlled: React.FC<DayPickerProps> = (\n  initialProps = defaultProps\n) => {\n  // Extend props with defaults\n  const components: Components = {\n    ...defaultProps.components,\n    ...filterUndefinedProps(initialProps.components),\n  };\n  const classNames: ClassNames = {\n    ...defaultProps.classNames,\n    ...filterUndefinedProps(initialProps.classNames),\n  };\n  const props: DayPickerProps = {\n    ...defaultProps,\n    ...filterUndefinedProps(initialProps),\n    components,\n    classNames,\n  };\n\n  // From `style` prop\n  const style = { ...props.styles.container, ...props.style };\n\n  // From `className prop`\n  const className = [props.classNames.container];\n  if (props.className) {\n    className.concat(props.className.split(' '));\n  }\n  const classNameStr = className.join(' ');\n\n  const months = getMonths(props);\n\n  const { Navigation } = props.components;\n  return (\n    <div className={classNameStr} style={style} dir={props.dir}>\n      {props.showNavigation && <Navigation dayPickerProps={props} />}\n      <div\n        className={props.classNames.months}\n        style={props.styles ? props.styles.month : undefined}\n      >\n        {months.map((month: Date) => (\n          <Month key={getTime(month)} month={month} dayPickerProps={props} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport const DayPicker: React.FC<DayPickerProps> = (\n  initialProps: DayPickerProps\n) => {\n  const { initialMonth, ...props } = initialProps;\n  const isControlled = Boolean(props.month);\n\n  const [currentMonth, setCurrentMonth] = React.useState(\n    startOfMonth(initialMonth || new Date())\n  );\n\n  function handleMonthChange(month: Date, e: React.MouseEvent): void {\n    setCurrentMonth(month);\n    if (props.onMonthChange) {\n      props.onMonthChange(month, e);\n    }\n  }\n\n  return (\n    <DayPickerControlled\n      {...props}\n      onMonthChange={!isControlled ? handleMonthChange : props.onMonthChange}\n      month={isControlled ? props.month : currentMonth}\n    />\n  );\n};\n","import { addMonths, differenceInMonths, startOfMonth } from 'date-fns';\nimport { DayPickerProps } from 'types';\n\n/**\n * Get the months to render in DayPicker according to the passed\n * `numberOfMonths` and other month-related props.\n */\nexport function getMonths(props: DayPickerProps): Date[] {\n  const {\n    month = new Date(),\n    numberOfMonths,\n    toMonth,\n    fromMonth,\n    reverseMonths,\n  } = props;\n\n  const start = startOfMonth(month);\n  const end = startOfMonth(addMonths(start, numberOfMonths));\n  const monthsDiff = differenceInMonths(end, start);\n\n  let months = [];\n  for (let i = 0; i < monthsDiff; i++) {\n    const month = addMonths(start, i);\n    if (toMonth && month > startOfMonth(toMonth)) {\n      // Skip months after toMonth\n      continue;\n    }\n    if (fromMonth && month < startOfMonth(fromMonth)) {\n      // Skip months before fromMonth\n      continue;\n    }\n    months.push(month);\n  }\n\n  if (reverseMonths) {\n    months = months.reverse();\n  }\n  return months;\n}\n","import * as React from 'react';\nimport { format, parse } from 'date-fns';\n\nimport { defaultProps } from 'components';\n\nimport {\n  DayClickEventHandler,\n  MonthChangeEventHandler,\n  MatchingModifiers,\n} from '../types';\n\nfunction isValid(day: Date): boolean {\n  return !isNaN(day.getTime());\n}\n\nexport type UseInputOptions = {\n  locale: Locale;\n  required: boolean;\n};\nexport type useInput = (\n  initialValue: Date | undefined,\n  formatStr: string,\n  options?: UseInputOptions\n) => [\n  Date, // current month\n  Date | undefined, // selected day\n  string, // input value\n  {\n    onDayClick: DayClickEventHandler;\n    onChange: React.ChangeEventHandler<HTMLInputElement>;\n    onBlur: React.FocusEventHandler<HTMLInputElement>;\n    onMonthChange: MonthChangeEventHandler;\n  }\n];\n\nexport const useInput: useInput = (initialSelectedDay, formatStr, _options) => {\n  const options: UseInputOptions = {\n    locale: defaultProps.locale,\n    required: false,\n    ..._options,\n  };\n\n  const initialInputValue = initialSelectedDay\n    ? format(initialSelectedDay, formatStr, options)\n    : '';\n\n  const [selectedDay, setSelectedDay] = React.useState<Date | undefined>(\n    initialSelectedDay\n  );\n  const [inputValue, setInputValue] = React.useState(initialInputValue);\n  const [currentMonth, setCurrentMonth] = React.useState(\n    initialSelectedDay || new Date()\n  );\n\n  function onChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    const el = e.target;\n    setInputValue(el.value);\n    const day = parse(el.value, formatStr, new Date(), options);\n    if (!isValid(day)) {\n      setSelectedDay(undefined);\n      return;\n    }\n    setSelectedDay(day);\n    setCurrentMonth(day); // Update the month shown in the calendar.\n  }\n\n  function onBlur(e: React.FocusEvent<HTMLInputElement>): void {\n    const el = e.target;\n    const day = parse(el.value, formatStr, new Date(), options);\n    if (isValid(day) || !options.required) {\n      if (onBlur) onBlur(e);\n      return;\n    }\n\n    setSelectedDay(initialSelectedDay);\n    setCurrentMonth(initialSelectedDay || new Date());\n    setInputValue(initialInputValue || '');\n  }\n\n  function onFocus(e: React.FocusEvent<HTMLInputElement>): void {\n    const el = e.target;\n\n    if (el.value) {\n      const day = parse(el.value, formatStr, new Date(), options);\n      if (isValid(day)) {\n        setCurrentMonth(day);\n      }\n      if (onFocus) onFocus(e);\n      return;\n    }\n    setSelectedDay(initialSelectedDay);\n    setCurrentMonth(initialSelectedDay || new Date());\n    setInputValue(initialInputValue || '');\n\n    if (onFocus) onFocus(e);\n  }\n\n  function onDayClick(day: Date, modifiers: MatchingModifiers): void {\n    if (modifiers.selected) {\n      if (!options.required) {\n        setSelectedDay(undefined);\n        setInputValue('');\n      }\n      return;\n    }\n    setSelectedDay(day);\n    const value = format(day, formatStr, options);\n    setInputValue(value);\n  }\n\n  function onMonthChange(month: React.SetStateAction<Date>): void {\n    setCurrentMonth(month);\n  }\n\n  return [\n    currentMonth,\n    selectedDay,\n    inputValue,\n    { onDayClick, onMonthChange, onChange, onFocus, onBlur },\n  ];\n};\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","toDate","argument","TypeError","argStr","toString","Date","getTime","console","warn","Error","stack","NaN","toInteger","dirtyNumber","number","Number","isNaN","Math","ceil","floor","addDays","dirtyDate","dirtyAmount","date","amount","setDate","getDate","startOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","day","getDay","diff","setHours","MILLISECONDS_IN_MINUTE","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","startOfDay","MILLISECONDS_IN_DAY","addMonths","desiredMonth","getMonth","dateWithDesiredMonth","setFullYear","getFullYear","daysInMonth","year","monthIndex","lastDayOfMonth","getDaysInMonth","setMonth","min","compareAsc","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","isSameDay","dateLeftStartOfDay","dateRightStartOfDay","MILLISECONDS_IN_WEEK","differenceInDays","sign","difference","abs","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","result","differenceInMonths","differenceInCalendarMonths","startOfMonth","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","array","predicate","key","findIndex","pattern","test","object","findKey","valueCallback","rest","slice","code","formatDistance","token","count","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","_dirtyOptions","rem100","era","narrow","abbreviated","wide","quarter","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","firstWeekContainsDate","subMilliseconds","timestamp","addMilliseconds","addLeadingZeros","targetLength","output","formatters","signedYear","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","numberOfDigits","milliseconds","getUTCMilliseconds","pow","startOfUTCISOWeek","getUTCDay","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getUTCISOWeek","fourthOfJanuary","startOfUTCISOWeekYear","startOfUTCWeek","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","getUTCWeek","firstWeek","startOfUTCWeekYear","dayPeriodEnum","G","y","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","M","L","w","week","I","isoWeek","d","D","dayOfYear","setUTCMonth","getUTCDayOfYear","E","dayOfWeek","e","localDayOfWeek","c","isoDayOfWeek","a","dayPeriodEnumValue","b","hours","B","h","H","K","k","m","S","X","_localize","timezoneOffset","_originalDate","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","originalDate","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","timeLongFormatter","longFormatters","P","dateTimeFormat","datePattern","timePattern","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","dirtyFormatStr","formatStr","defaultLocale","isValid","utcDate","formatterOptions","map","substring","firstCharacter","longFormatter","join","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","target","dirtyObject","property","getUnixTime","startOfWeekYear","getWeekYear","getWeek","getWeeksInMonth","startOfWeekLeft","startOfWeekRight","differenceInCalendarWeeks","isToday","now","setUTCDay","dirtyDay","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_SECOND","numericPatterns","hour23h","hour24h","hour11h","hour12h","minute","second","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","parseNumericPattern","parseTimezonePattern","seconds","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","priority","parse","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","dirtyWeek","setUTCWeek","dirtyISOWeek","setUTCISOWeek","isLeapYear","wholeWeekDays","setUTCISODay","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","TIMEZONE_UNIT_PRIORITY","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyBackupDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","parser","Array","isArray","incompatibleToken","_i","usedToken","concat","fullToken","push","uniquePrioritySetters","setter","sort","filter","reverse","setterArray","convertedDate","isDayAfter","day1","day2","isDayBefore","listModifiers","modifiers","entries","reduce","previousValue","_a","name","modifier","some","before","after","daysOfWeek","includes","matchModifier","defaultModifiers","disabled","hidden","interactive","outside","selected","undefined","initialModifiers","props","showOutsideDays","Boolean","enableOutsideDaysClick","getModifiersFromProps","forEach","onDayClick","DateWithModifiers","Caption","styles","dayPickerProps","containerProps","className","caption","style","React.createElement","formatCaption","Day","formatDay","onClick","modifiersStyles","classNames","modifiersClassNames","stopPropagation","preventDefault","keys","dataProps","aria-disabled","wrapperProps","dayWrapper","Component","Head","showWeekNumber","weekdayNames","start","names","getWeekdaysNames","head","headRow","headWeekNumber","scope","headWeekName","Week","weekNumber","components","WeekNumber","weekWeeknumber","days","weekDay","getOutsideStartDays","firstDayOfWeek","startDiff","day_1","fromMonth","dateWithModifiers","getOutsideEndDays","endDiff","endOfWeek","dayDate","toMonth","getWeeks","fixedWeeks","monthStart","endOfMonth","weeks","lastWeekStr","weekStr","startDays","endDays","lastWeekDate","weeksInMonth","diff_1","addWeeks","Month","showCaption","showHead","monthTable","monthTbody","formatWeekNumber","Navigation","onMonthChange","onPrevClick","onNextClick","prevMonth","nextMonth","numberOfMonths","add","currentMonth","_b","nav","nextProps","navNext","prevProps","navPrev","prevLabel","nextLabel","buttons","type","dir","defaultProps","container","months","formatOptions","formatWeekdayName","pagedNavigation","reverseMonths","showNavigation","filterUndefinedProps","obj","clean","DayPickerControlled","initialProps","split","classNameStr","monthsDiff","month_1","getMonths","initialMonth","getOwnPropertySymbols","propertyIsEnumerable","isControlled","setCurrentMonth","initialSelectedDay","required","initialInputValue","selectedDay","setSelectedDay","inputValue","setInputValue","_c","onChange","el","onFocus","onBlur"],"mappings":"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"}