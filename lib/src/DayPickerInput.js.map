{"version":3,"sources":["../../src/DayPickerInput.js"],"names":["HIDE_TIMEOUT","DayPickerInput","props","input","daypicker","clickedInside","clickTimeout","hideTimeout","state","getStateFromProps","showOverlay","hideAfterDayClick","bind","handleContainerMouseDown","handleInputClick","handleInputFocus","handleInputBlur","handleInputChange","handleInputKeyUp","handleDayClick","nextProps","monthFromProps","dayPickerProps","month","nextMonthFromProps","selectedDaysFromProps","selectedDays","nextSelectedDaysFromProps","nextValue","value","currentValue","monthChanged","getFullYear","getMonth","setState","clearTimeout","blurTimeout","format","m","isValid","toDate","initialMonth","Date","day","callback","onDayChange","modifiersObj","disabled","disabledDays","selected","modifiers","reduce","obj","modifier","newObj","hideOnDayClick","setTimeout","hideDayPicker","e","showDayPicker","onClick","persist","onFocus","focus","onBlur","onChange","target","trim","undefined","updateState","keyCode","onKeyUp","clickUnselectsDay","onDayClick","Array","isArray","slice","selectedDayIdx","indexOf","splice","locale","classNames","selectedDay","onTodayButtonClick","todayButton","Overlay","overlayComponent","el","component","inputProps","Input","container","renderOverlay","Component","defaultProps","children","overlayWrapper","overlay","propTypes","string","oneOfType","arrayOf","bool","object","any","shape","isRequired","func"],"mappings":"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","file":"DayPickerInput.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment'; // eslint-disable-line import/no-extraneous-dependencies\n\nimport DayPicker from './DayPicker';\nimport { getModifiersForDay } from './ModifiersUtils';\nimport MomentLocaleUtils from './addons/MomentLocaleUtils';\nimport { ESC } from './keys';\n\n// When clicking on a day cell, overlay will be hidden after this timeout\nexport const HIDE_TIMEOUT = 100;\n\nexport default class DayPickerInput extends React.Component {\n  static propTypes = {\n    value: PropTypes.string,\n\n    format: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.string),\n      PropTypes.string,\n    ]),\n\n    showOverlay: PropTypes.bool,\n    dayPickerProps: PropTypes.object,\n    hideOnDayClick: PropTypes.bool,\n    clickUnselectsDay: PropTypes.bool,\n    component: PropTypes.any,\n    overlayComponent: PropTypes.any,\n\n    classNames: PropTypes.shape({\n      container: PropTypes.string,\n      overlayWrapper: PropTypes.string,\n      overlay: PropTypes.string.isRequired,\n    }),\n\n    onDayChange: PropTypes.func,\n    onChange: PropTypes.func,\n    onClick: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    onKeyUp: PropTypes.func,\n  };\n\n  static defaultProps = {\n    dayPickerProps: {},\n    value: '',\n    format: 'L',\n    showOverlay: false,\n    hideOnDayClick: true,\n    clickUnselectsDay: false,\n    component: 'input',\n    overlayComponent: ({ children, classNames }) => (\n      <div className={classNames.overlayWrapper}>\n        <div className={classNames.overlay}>{children}</div>\n      </div>\n    ),\n    classNames: {\n      container: 'DayPickerInput',\n      overlayWrapper: 'DayPickerInput-OverlayWrapper',\n      overlay: 'DayPickerInput-Overlay',\n    },\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = this.getStateFromProps(props);\n    this.state.showOverlay = props.showOverlay;\n\n    this.hideAfterDayClick = this.hideAfterDayClick.bind(this);\n    this.handleContainerMouseDown = this.handleContainerMouseDown.bind(this);\n    this.handleInputClick = this.handleInputClick.bind(this);\n    this.handleInputFocus = this.handleInputFocus.bind(this);\n    this.handleInputBlur = this.handleInputBlur.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleInputKeyUp = this.handleInputKeyUp.bind(this);\n    this.handleDayClick = this.handleDayClick.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const monthFromProps = this.props.dayPickerProps.month;\n    const nextMonthFromProps = nextProps.dayPickerProps.month;\n\n    const selectedDaysFromProps = this.props.dayPickerProps.selectedDays;\n    const nextSelectedDaysFromProps = nextProps.dayPickerProps.selectedDays;\n\n    const nextValue = nextProps.value;\n    const currentValue = this.props.value;\n\n    const monthChanged =\n      (nextMonthFromProps && !monthFromProps) ||\n      (nextMonthFromProps &&\n        (nextMonthFromProps.getFullYear() !== monthFromProps.getFullYear() ||\n          nextMonthFromProps.getMonth() !== monthFromProps.getMonth()));\n\n    if (nextValue !== currentValue) {\n      this.setState({ value: nextValue });\n    }\n    if (monthChanged) {\n      this.setState({ month: nextMonthFromProps });\n    }\n    if (selectedDaysFromProps !== nextSelectedDaysFromProps) {\n      this.setState({ selectedDays: nextSelectedDaysFromProps });\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.clickTimeout);\n    clearTimeout(this.hideTimeout);\n    clearTimeout(this.blurTimeout);\n  }\n\n  getStateFromProps(props) {\n    const { dayPickerProps, format, value } = props;\n    let month;\n    if (value) {\n      // Display the month specified in the value prop\n      const m = moment(value, format, true);\n      if (m.isValid()) {\n        month = m.toDate();\n      }\n    } else {\n      // Otherwise display the month coming from `dayPickerProps` or the current month\n      month = dayPickerProps.initialMonth || dayPickerProps.month || new Date();\n    }\n    return {\n      value,\n      month,\n      selectedDays: dayPickerProps.selectedDays,\n    };\n  }\n\n  getInput() {\n    return this.input;\n  }\n\n  getDayPicker() {\n    return this.daypicker;\n  }\n\n  input = null;\n  daypicker = null;\n  clickedInside = false;\n  clickTimeout = null;\n  hideTimeout = null;\n\n  /**\n   * Update the component's state and fire the `onDayChange` event\n   * passing the day's modifiers to it\n   * @param {Date} day - Will be used for changing the month\n   * @param {String} value - Input field value\n   * @private\n   */\n  updateState(day, value, callback) {\n    const { dayPickerProps, onDayChange } = this.props;\n    this.setState({ month: day, value }, () => {\n      if (callback) {\n        callback();\n      }\n      if (!onDayChange) {\n        return;\n      }\n      const modifiersObj = {\n        disabled: dayPickerProps.disabledDays,\n        selected: dayPickerProps.selectedDays,\n        ...dayPickerProps.modifiers,\n      };\n      const modifiers = getModifiersForDay(day, modifiersObj).reduce(\n        (obj, modifier) => {\n          const newObj = { ...obj };\n          newObj[modifier] = true;\n          return newObj;\n        },\n        {}\n      );\n      onDayChange(moment(day), modifiers);\n    });\n  }\n\n  /**\n   * Show the Day Picker overlay.\n   *\n   * @memberof DayPickerInput\n   */\n  showDayPicker() {\n    this.setState({\n      showOverlay: true,\n    });\n  }\n\n  /**\n   * Hide the Day Picker overlay\n   *\n   * @memberof DayPickerInput\n   */\n  hideDayPicker() {\n    this.setState({\n      showOverlay: false,\n    });\n  }\n\n  hideAfterDayClick() {\n    if (!this.props.hideOnDayClick) {\n      return;\n    }\n    this.hideTimeout = setTimeout(() => this.hideDayPicker(), HIDE_TIMEOUT);\n  }\n\n  handleContainerMouseDown() {\n    this.clickedInside = true;\n    // The input's onBlur method is called from a queue right after the onMouseDown event.\n    // setTimeout adds another callback in the queue, which is called after the onBlur event.\n    this.clickTimeout = setTimeout(() => {\n      this.clickedInside = false;\n    }, 0);\n  }\n\n  handleInputClick(e) {\n    this.showDayPicker();\n    if (this.props.onClick) {\n      e.persist();\n      this.props.onClick(e);\n    }\n  }\n\n  handleInputFocus(e) {\n    this.showDayPicker();\n    if (this.props.onFocus) {\n      e.persist();\n      this.props.onFocus(e);\n    }\n  }\n\n  handleInputBlur(e) {\n    this.setState({\n      showOverlay: this.clickedInside,\n    });\n    // Force input's focus if blur event was caused by clicking inside the overlay\n    if (this.clickedInside) {\n      this.blurTimeout = setTimeout(() => this.input.focus(), 0);\n    }\n    if (this.props.onBlur) {\n      e.persist();\n      this.props.onBlur(e);\n    }\n  }\n\n  handleInputChange(e) {\n    const { onChange, onDayChange, format } = this.props;\n    if (onChange) {\n      e.persist();\n      onChange(e);\n    }\n    const { value } = e.target;\n    const m = moment(value, format, true);\n    if (value.trim() === '') {\n      this.setState({ value });\n      if (onDayChange) {\n        onDayChange(undefined, {});\n      }\n      return;\n    }\n    if (!m.isValid()) {\n      this.setState({ value });\n      return;\n    }\n    const day = m.toDate();\n    this.updateState(day, value);\n  }\n\n  handleInputKeyUp(e) {\n    // Hide the overlay if the ESC key is pressed\n    this.setState({ showOverlay: e.keyCode !== ESC });\n    if (this.props.onKeyUp) {\n      e.persist();\n      this.props.onKeyUp(e);\n    }\n  }\n\n  handleDayClick(day, modifiers, e) {\n    const {\n      clickUnselectsDay,\n      dayPickerProps,\n      onDayChange,\n      format,\n    } = this.props;\n    if (dayPickerProps.onDayClick) {\n      dayPickerProps.onDayClick(day, modifiers, e);\n    }\n\n    // Do nothing if the day is disabled\n    if (modifiers.disabled) {\n      return;\n    }\n\n    // If the clicked day is already selected, remove the clicked day\n    // from the selected days and empty the field value\n    if (modifiers.selected && clickUnselectsDay) {\n      let { selectedDays } = this.state;\n      if (Array.isArray(selectedDays)) {\n        selectedDays = selectedDays.slice(0);\n        const selectedDayIdx = selectedDays.indexOf(day);\n        selectedDays.splice(selectedDayIdx, 1);\n      } else if (moment(selectedDays).isValid()) {\n        selectedDays = null;\n      }\n      this.setState({ value: '', selectedDays }, this.hideAfterDayClick);\n      if (onDayChange) {\n        onDayChange(undefined, modifiers);\n      }\n      return;\n    }\n\n    const m = moment(day).locale(dayPickerProps.locale || 'en');\n    const value = m.format(typeof format === 'string' ? format : format[0]);\n    this.setState({ value, month: day }, () => {\n      if (onDayChange) {\n        onDayChange(m, modifiers);\n      }\n      this.hideAfterDayClick();\n    });\n  }\n\n  renderOverlay() {\n    const { format, classNames, dayPickerProps } = this.props;\n    const { selectedDays, value } = this.state;\n    let selectedDay;\n    if (!selectedDays && value) {\n      const m = moment(value, format, true);\n      if (m.isValid()) {\n        selectedDay = m.toDate();\n      }\n    } else if (selectedDays) {\n      selectedDay = selectedDays;\n    }\n    let onTodayButtonClick;\n    if (dayPickerProps.todayButton) {\n      // Set the current day when clicking the today button\n      onTodayButtonClick = () =>\n        this.updateState(\n          new Date(),\n          moment()\n            .locale(dayPickerProps.locale || 'en')\n            .format(this.props.format),\n          this.hideAfterDayClick\n        );\n    }\n    const Overlay = this.props.overlayComponent;\n    return (\n      <Overlay\n        classNames={classNames}\n        month={this.state.month}\n        selectedDay={selectedDay}\n        input={this.input}\n      >\n        <DayPicker\n          ref={el => (this.daypicker = el)}\n          localeUtils={MomentLocaleUtils}\n          onTodayButtonClick={onTodayButtonClick}\n          {...dayPickerProps}\n          month={this.state.month}\n          selectedDays={selectedDay}\n          onDayClick={this.handleDayClick}\n          onMonthChange={month => this.setState({ month })}\n        />\n      </Overlay>\n    );\n  }\n\n  render() {\n    const {\n      component,\n      overlayComponent,\n      dayPickerProps,\n      format,\n      clickUnselectsDay,\n      hideOnDayClick,\n      onDayChange,\n      classNames,\n      ...inputProps\n    } = this.props;\n    const Input = this.props.component;\n    return (\n      <div\n        className={this.props.classNames.container}\n        onMouseDown={this.handleContainerMouseDown}\n      >\n        <Input\n          ref={el => (this.input = el)}\n          {...inputProps}\n          value={this.state.value}\n          onChange={this.handleInputChange}\n          onFocus={this.handleInputFocus}\n          onBlur={this.handleInputBlur}\n          onKeyUp={this.handleInputKeyUp}\n          onClick={this.handleInputClick}\n        />\n        {this.state.showOverlay && this.renderOverlay()}\n      </div>\n    );\n  }\n}\n"]}