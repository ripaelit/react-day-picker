{"version":3,"sources":["../../src/Navbar.js"],"names":["Navbar","nextProps","labels","props","showPreviousButton","showNextButton","classNames","className","onPreviousClick","onNextClick","dir","previousClickHandler","nextClickHandler","previousButton","previousMonth","navButtonPrev","navButtonInteractionDisabled","undefined","nextButton","nextMonth","navButtonNext","navBar","defaultProps","NavbarPropTypes","shape","string","isRequired","bool","func","propTypes"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,M;;;;;;;;;;;0CAWGC,S,EAAW;AAC/B,aACEA,UAAUC,MAAV,KAAqB,KAAKC,KAAL,CAAWD,MAAhC,IACA,KAAKC,KAAL,CAAWC,kBAAX,KAAkCH,UAAUG,kBAD5C,IAEA,KAAKD,KAAL,CAAWE,cAAX,KAA8BJ,UAAUI,cAH1C;AAKD;;;6BAEQ;AAAA,mBAUH,KAAKF,KAVF;AAAA,UAELG,UAFK,UAELA,UAFK;AAAA,UAGLC,SAHK,UAGLA,SAHK;AAAA,UAILH,kBAJK,UAILA,kBAJK;AAAA,UAKLC,cALK,UAKLA,cALK;AAAA,UAMLG,eANK,UAMLA,eANK;AAAA,UAOLC,WAPK,UAOLA,WAPK;AAAA,UAQLP,MARK,UAQLA,MARK;AAAA,UASLQ,GATK,UASLA,GATK;;AAWP,UAAMC,uBAAuBD,QAAQ,KAAR,GAAgBD,WAAhB,GAA8BD,eAA3D;AACA,UAAMI,mBAAmBF,QAAQ,KAAR,GAAgBF,eAAhB,GAAkCC,WAA3D;;AAEA,UAAMI,iBACJ;AACE,kBAAS,GADX;AAEE,cAAK,QAFP;AAGE,sBAAYX,OAAOY,aAHrB;AAIE,aAAI,UAJN;AAKE,mBACEV,qBACIE,WAAWS,aADf,GAEOT,WAAWS,aAFlB,SAEmCT,WAAWU,4BARlD;AAUE,iBAASZ,qBAAqB;AAAA,iBAAMO,sBAAN;AAAA,SAArB,GAAoDM;AAV/D,QADF;;AAeA,UAAMC,aACJ;AACE,kBAAS,GADX;AAEE,cAAK,QAFP;AAGE,sBAAYhB,OAAOiB,SAHrB;AAIE,aAAI,OAJN;AAKE,mBACEd,iBACIC,WAAWc,aADf,GAEOd,WAAWc,aAFlB,SAEmCd,WAAWU,4BARlD;AAUE,iBAASX,iBAAiB;AAAA,iBAAMO,kBAAN;AAAA,SAAjB,GAA4CK;AAVvD,QADF;;AAeA,aACE;AAAA;AAAA,UAAK,WAAWV,aAAaD,WAAWe,MAAxC;AACGX,gBAAQ,KAAR,GACG,CAACQ,UAAD,EAAaL,cAAb,CADH,GAEG,CAACA,cAAD,EAAiBK,UAAjB;AAHN,OADF;AAOD;;;;;;AAtEkBlB,M,CACZsB,Y,GAAe;AACpBhB,kCADoB;AAEpBI,OAAK,KAFe;AAGpBR,UAAQ;AACNY,mBAAe,gBADT;AAENK,eAAW;AAFL,GAHY;AAOpBf,sBAAoB,IAPA;AAQpBC,kBAAgB;AARI,C;kBADHL,M;AAyEd,IAAMuB,4CAAkB;AAC7BjB,cAAY,oBAAUkB,KAAV,CAAgB;AAC1BH,YAAQ,oBAAUI,MAAV,CAAiBC,UADC;AAE1BX,mBAAe,oBAAUU,MAAV,CAAiBC,UAFN;AAG1BN,mBAAe,oBAAUK,MAAV,CAAiBC;AAHN,GAAhB,CADiB;AAM7BnB,aAAW,oBAAUkB,MANQ;AAO7BrB,sBAAoB,oBAAUuB,IAPD;AAQ7BtB,kBAAgB,oBAAUsB,IARG;AAS7BnB,mBAAiB,oBAAUoB,IATE;AAU7BnB,eAAa,oBAAUmB,IAVM;AAW7BlB,OAAK,oBAAUe,MAXc;AAY7BvB,UAAQ,oBAAUsB,KAAV,CAAgB;AACtBV,mBAAe,oBAAUW,MAAV,CAAiBC,UADV;AAEtBP,eAAW,oBAAUM,MAAV,CAAiBC;AAFN,GAAhB;AAZqB,CAAxB;;AAkBP1B,OAAO6B,SAAP,GAAmBN,eAAnB","file":"Navbar.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from './PropTypes';\nimport defaultClassNames from './classNames';\n\nexport default class Navbar extends Component {\n  static defaultProps = {\n    classNames: defaultClassNames,\n    dir: 'ltr',\n    labels: {\n      previousMonth: 'Previous Month',\n      nextMonth: 'Next Month',\n    },\n    showPreviousButton: true,\n    showNextButton: true,\n  };\n  shouldComponentUpdate(nextProps) {\n    return (\n      nextProps.labels !== this.props.labels ||\n      this.props.showPreviousButton !== nextProps.showPreviousButton ||\n      this.props.showNextButton !== nextProps.showNextButton\n    );\n  }\n\n  render() {\n    const {\n      classNames,\n      className,\n      showPreviousButton,\n      showNextButton,\n      onPreviousClick,\n      onNextClick,\n      labels,\n      dir,\n    } = this.props;\n    const previousClickHandler = dir === 'rtl' ? onNextClick : onPreviousClick;\n    const nextClickHandler = dir === 'rtl' ? onPreviousClick : onNextClick;\n\n    const previousButton = (\n      <span\n        tabIndex=\"0\"\n        role=\"button\"\n        aria-label={labels.previousMonth}\n        key=\"previous\"\n        className={\n          showPreviousButton\n            ? classNames.navButtonPrev\n            : `${classNames.navButtonPrev} ${classNames.navButtonInteractionDisabled}`\n        }\n        onClick={showPreviousButton ? () => previousClickHandler() : undefined}\n      />\n    );\n\n    const nextButton = (\n      <span\n        tabIndex=\"0\"\n        role=\"button\"\n        aria-label={labels.nextMonth}\n        key=\"right\"\n        className={\n          showNextButton\n            ? classNames.navButtonNext\n            : `${classNames.navButtonNext} ${classNames.navButtonInteractionDisabled}`\n        }\n        onClick={showNextButton ? () => nextClickHandler() : undefined}\n      />\n    );\n\n    return (\n      <div className={className || classNames.navBar}>\n        {dir === 'rtl'\n          ? [nextButton, previousButton]\n          : [previousButton, nextButton]}\n      </div>\n    );\n  }\n}\n\nexport const NavbarPropTypes = {\n  classNames: PropTypes.shape({\n    navBar: PropTypes.string.isRequired,\n    navButtonPrev: PropTypes.string.isRequired,\n    navButtonNext: PropTypes.string.isRequired,\n  }),\n  className: PropTypes.string,\n  showPreviousButton: PropTypes.bool,\n  showNextButton: PropTypes.bool,\n  onPreviousClick: PropTypes.func,\n  onNextClick: PropTypes.func,\n  dir: PropTypes.string,\n  labels: PropTypes.shape({\n    previousMonth: PropTypes.string.isRequired,\n    nextMonth: PropTypes.string.isRequired,\n  }),\n};\n\nNavbar.propTypes = NavbarPropTypes;\n"]}